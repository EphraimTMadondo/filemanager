defaults: &defaults
  docker:
    - image: opuscapita/minsk-core-ci:grails-2.4.4-jdk-8u192-nodejs-8.17.0-maven-3.3.9-docker
  working_directory: ~/build

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - run:
          name: Environment inject
          command: /bin/env_inject.sh
      - checkout
      - run:
          name: save-cache-checksum
          command: find -name "package.json" | xargs cat >> /tmp/cache-checksum

      - restore_cache:
          keys:
            - v1-filemanager-{{ .Branch }}-{{ checksum "/tmp/cache-checksum" }}
            - v1-filemanager-{{ .Branch }}
            - v1-filemanager-

      - run:
          name: bootstrap-packages
          command: yarn install

      - run:
          name: lint
          command: npm run lint

      - run:
          name: install-demo-dependencies
          command: (cd demo && yarn install)


      - save_cache:
          key: v1-filemanager-{{ .Branch }}-{{ checksum "/tmp/cache-checksum" }}
          paths:
            - ./yarn.lock
            - ./node_modules
            - ./packages/connector-node-v1/node_modules
            - ./packages/server-nodejs/node_modules
            - ./packages/connector-google-drive-v2/node_modules
            - ./packages/client-react/node_modules
            - ./demo/yarn.lock
            - ./demo/node_modules

      - run:
          name: test-restapi
          command: |
            cd packages/server-nodejs
            mkdir junit
            npm run start-hide && npm run test-restapi -- --reporter mocha-junit-reporter

          environment:
            MOCHA_FILE: junit/test-results.xml

      - store_test_results:
          path: ~/repo/packages/server-nodejs/junit

      - store_artifacts:
          path: ~/repo/packages/server-nodejs/junit

  build_release:
    <<: *defaults
    steps:
      - run:
          name: Environment inject
          command: /bin/env_inject.sh

      - checkout

      - run:
          name: save-cache-checksum
          command: find -name "package.json" | xargs cat >> /tmp/cache-checksum

      - restore_cache:
          keys:
            - v1-filemanager-{{ .Branch }}-{{ checksum "/tmp/cache-checksum" }}
            - v1-filemanager-{{ .Branch }}
            - v1-filemanager-

      - run:
          name: bootstrap-packages
          command: yarn install

      - save_cache:
          key: v1-filemanager-{{ .Branch }}-{{ checksum "/tmp/cache-checksum" }}
          paths:
            - ./yarn.lock
            - ./node_modules
            - ./packages/connector-node-v1/node_modules
            - ./packages/server-nodejs/node_modules
            - ./packages/connector-google-drive-v2/node_modules
            - ./packages/client-react/node_modules
            - ./demo/yarn.lock
            - ./demo/node_modules

      - run:
          name: publish-to-npm
          command: npm run publish

  deploy-demo:
    <<: *defaults
    steps:
      - run:
          name: Environment inject
          command: /bin/env_inject.sh

      - checkout
      - setup_remote_docker

      - run:
          name: save-cache-checksum
          command: find -name "package.json" | xargs cat >> /tmp/cache-checksum

      - restore_cache:
          keys:
            - v1-filemanager-{{ .Branch }}-{{ checksum "/tmp/cache-checksum" }}
            - v1-filemanager-{{ .Branch }}
            - v1-filemanager-

      - run:
          name: bootstrap-packages
          command: yarn

      - run:
          name: install-demo-dependencies
          command: (cd demo && yarn install)

      - run:
          name: build-client-static
          command: |
            cd packages/client-react
            npm run gh-pages:build
            mv ./.gh-pages-tmp ../../demo && mv ../../demo/.gh-pages-tmp ../../demo/static

      - run:
          name: build-server-api-docs
          command: |
            cd packages/server-nodejs
            npm run build-api-docs
            mkdir -p ../../demo/static/api
            cp -r api-docs.tmp/docs ../../demo/static/api

      - run:
          name: deploy-docker-demo-image
          command: |
            ./.circleci/scripts/deploy-docker-demo-image.js

      - run:
          name: azure-create-web-app
          command: |
            ./.circleci/scripts/azure-create-webapp.js

      - run:
          name: update-github-commit-status
          command: ./.circleci/scripts/update-github-commit-status.js

  release:
    <<: *defaults
    steps:

      - run:
          name: Environment inject
          command: env_inject.sh

      - checkout

      - run:
          name: Executing release scrtipt.
          command: .circleci/release.sh


  azure-maintenance:
    <<: *defaults
    steps:
      - run:
          name: Environment inject
          command: /bin/env_inject.sh

      - checkout

      - run:
          name: azure-cleanup
          command: ./.circleci/scripts/azure-cleanup.js

workflows:
  version: 2
  commit:
      jobs:
        - build:
            filters:
              branches:
                ignore:
                  - release
        - deploy-demo:
            requires:
              - build
        - release:
            filters:
              branches:
                only: release
        - build_release:
            filters:
              tags:
                only: /.*/
              branches:
                ignore: /.*/
  nightly:
      triggers:
        - schedule:
            cron: "0 0 * * *"
            filters:
              branches:
                only:
                  - master
      jobs:
        - azure-maintenance
